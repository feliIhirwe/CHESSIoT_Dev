[module helperfunctions('http://www.eclipse.org/uml2/3.0.0/UML')/]

[query public getAppliedStereotype(arg0 : Element, arg1 : String) : Stereotype
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getAppliedStereotype(org.eclipse.uml2.uml.Element, java.lang.String)', Sequence{arg0, arg1}) /]

[query public getExecution(arg0 : Element) : OclAny
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getExecution(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public getSubUsage(arg0 : Element, arg1 : String, arg2 : String) : Sequence(OclAny)
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getSubUsage(org.eclipse.uml2.uml.Element, java.lang.String, java.lang.String)', Sequence{arg0, arg1, arg2}) /]

[query public getStereotypeProperty(arg0 : Element, arg1 : String, arg2 : String) : OclAny
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getStereotypeProperty(org.eclipse.uml2.uml.Element, java.lang.String, java.lang.String)', Sequence{arg0, arg1, arg2}) /]

[query public setStereotypeProperty(arg0 : Element, arg1 : String, arg2 : String, arg3 : String) : OclVoid
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'setStereotypeProperty(org.eclipse.uml2.uml.Element, java.lang.String, java.lang.String, java.lang.String)', Sequence{arg0, arg1, arg2, arg3}) /]

[query public hasStereotype(arg0 : Element, arg1 : String) : Boolean
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'hasStereotype(org.eclipse.uml2.uml.Element, java.lang.String)', Sequence{arg0, arg1}) /]

[query public getStereotypeEnumLiteralName(arg0 : Element, arg1 : String, arg2 : String) : OclAny
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getStereotypeEnumLiteralName(org.eclipse.uml2.uml.Element, java.lang.String, java.lang.String)', Sequence{arg0, arg1, arg2}) /]

[query public getLinkData(arg0 : Element, arg1 : String) : OclAny
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getLinkData(org.eclipse.uml2.uml.Element, java.lang.String)', Sequence{arg0, arg1}) /]

[query public getStereotypeReference(arg0 : Element, arg1 : String, arg2 : String) : OclAny
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getStereotypeReference(org.eclipse.uml2.uml.Element, java.lang.String, java.lang.String)', Sequence{arg0, arg1, arg2}) /]

[query public getStereotypeReferenceProperty(arg0 : Element, arg1 : String, arg2 : String, arg3 : String, arg4 : String) : OclAny
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getStereotypeReferenceProperty(org.eclipse.uml2.uml.Element, java.lang.String, java.lang.String, java.lang.String, java.lang.String)', Sequence{arg0, arg1, arg2, arg3, arg4}) /]

[query public getStereotypeReferenceName(arg0 : Element, arg1 : String, arg2 : String) : OclAny
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getStereotypeReferenceName(org.eclipse.uml2.uml.Element, java.lang.String, java.lang.String)', Sequence{arg0, arg1, arg2}) /]

[query public getStereotypeRefListNames(arg0 : Element, arg1 : String, arg2 : String) : OclAny
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getStereotypeRefListNames(org.eclipse.uml2.uml.Element, java.lang.String, java.lang.String)', Sequence{arg0, arg1, arg2}) /]

[query public getStereotypeReference2(arg0 : Element, arg1 : String, arg2 : String) : OclAny
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getStereotypeReference2(org.eclipse.uml2.uml.Element, java.lang.String, java.lang.String)', Sequence{arg0, arg1, arg2}) /]

[query public getPacketOverhead(arg0 : Element) : OclAny
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getPacketOverhead(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public getMulticoreProcessors(arg0 : Package) : Sequence(Classifier)
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getMulticoreProcessors(org.eclipse.uml2.uml.Package)', Sequence{arg0}) /]

[query public getSupertasks(arg0 : Package) : Sequence(Classifier)
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getSupertasks(org.eclipse.uml2.uml.Package)', Sequence{arg0}) /]

[query public isMulticore(arg0 : Element) : Boolean
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'isMulticore(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public getCores(arg0 : Element) : Sequence(Classifier)
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getCores(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public getSchedulingServers(arg0 : Package) : Sequence(Classifier)
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getSchedulingServers(org.eclipse.uml2.uml.Package)', Sequence{arg0}) /]

[query public printCores(arg0 : Element) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'printCores(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public isRUNSystem(arg0 : Package) : Boolean
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'isRUNSystem(org.eclipse.uml2.uml.Package)', Sequence{arg0}) /]

[query public functionalPartitions(arg0 : Package) : Boolean
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'functionalPartitions(org.eclipse.uml2.uml.Package)', Sequence{arg0}) /]

[query public getSchedulableResources(arg0 : Classifier) : Sequence(Classifier)
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getSchedulableResources(org.eclipse.uml2.uml.Classifier)', Sequence{arg0}) /]

[query public getMAFFromCore(arg0 : Classifier) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getMAFFromCore(org.eclipse.uml2.uml.Classifier)', Sequence{arg0}) /]


[query public getSchedulingTable(arg0 : Classifier) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getSchedulingTable(org.eclipse.uml2.uml.Classifier)', Sequence{arg0}) /]

[query public getRUNSupertaskUtilization(arg0 : Classifier) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getRUNSupertaskUtilization(org.eclipse.uml2.uml.Classifier)', Sequence{arg0}) /]


[query public getPartitionHost(arg0 : Classifier) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getPartitionHost(org.eclipse.uml2.uml.Classifier)', Sequence{arg0}) /]

[query public getRUNHost(arg0 : Classifier) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getRUNHost(org.eclipse.uml2.uml.Classifier)', Sequence{arg0}) /]

[query public getHostForSecondaryScheduler(arg0 : Classifier) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getHostForSecondaryScheduler(org.eclipse.uml2.uml.Classifier)', Sequence{arg0}) /]

[query public getFunctionalPartitions(arg0 : Package) : Sequence(Classifier)
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getFunctionalPartitions(org.eclipse.uml2.uml.Package)', Sequence{arg0}) /]

[query public parseNFP_Duration(arg0 : String, arg1 : String) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'parseNFP_Duration(java.lang.String, java.lang.String)', Sequence{arg0, arg1}) /]

[query public printHeaderData(arg0 : Element) : OclAny
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'printHeaderData(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public printMessageToConsole(arg0 : Element, arg1 : String) : OclVoid
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'printMessageToConsole(org.eclipse.uml2.uml.Element, java.lang.String)', Sequence{arg0, arg1}) /]

[query public getElementShortName(arg0 : Element) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getElementShortName(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public getElementLongName(arg0 : Element) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getElementLongName(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public parseIntegerInterval(arg0 : String, arg1 : String) : OclAny
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'parseIntegerInterval(java.lang.String, java.lang.String)', Sequence{arg0, arg1}) /]

[query public parse_Integer(arg0 : String, arg1 : String) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'parse_Integer(java.lang.String, java.lang.String)', Sequence{arg0, arg1}) /]

[query public parseNFP_Integer(arg0 : String, arg1 : String) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'parseNFP_Integer(java.lang.String, java.lang.String)', Sequence{arg0, arg1}) /]

[query public parseNFP_Integer(arg0 : String, arg1 : String, arg2 : String) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'parseNFP_Integer(java.lang.String, java.lang.String, java.lang.String)', Sequence{arg0, arg1, arg2}) /]

[query public parseNFP_Real(arg0 : String, arg1 : String) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'parseNFP_Real(java.lang.String, java.lang.String)', Sequence{arg0, arg1}) /]

[query public parseNFP_DataTxRate(arg0 : String, arg1 : String) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'parseNFP_DataTxRate(java.lang.String, java.lang.String)', Sequence{arg0, arg1}) /]

[query public parseSchedParams(arg0 : String, arg1 : String, arg2 : String) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'parseSchedParams(java.lang.String, java.lang.String, java.lang.String)', Sequence{arg0, arg1, arg2}) /]

[query public parseContext(arg0 : String, arg1 : String, arg2 : String) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'parseContext(java.lang.String, java.lang.String, java.lang.String)', Sequence{arg0, arg1, arg2}) /]

[query public getArrivalPatternType(arg0 : Element) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getArrivalPatternType(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public getMessage(arg0 : Element) : OclAny
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'getMessage(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public fileName(arg0 : Model) : String
	= invoke('it.unipd.chess.m2m.marte2mast.common.HelperFunctions', 'fileName(org.eclipse.uml2.uml.Model)', Sequence{arg0}) /]
