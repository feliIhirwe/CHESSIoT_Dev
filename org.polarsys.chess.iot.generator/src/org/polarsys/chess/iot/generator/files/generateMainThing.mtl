[comment encoding = UTF-8 /]
[module generateMainThing('http://www.eclipse.org/uml2/5.0.0/UML')]
[import org::polarsys::chess::iot::generator::services::usesUML2Services/]
[import org::polarsys::chess::iot::generator::files::generateStateMachine/]


[template public generateMainThing (component : Component, aPackage : uml::Element)]
[file (component.name.concat(getMillisecond()).concat('.thingml'), false)]
/*****************************************************************************
 * Copyright (c) 2020 Intecs.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v20.html
 *
 * Contributors:
 *  Felicien Ihirwe
 *
 *****************************************************************************/
[for (component : Component | aPackage.allOwnedElements()->filter(Component))]
import [component.name.concat(getMillisecond()).concat('.thingml')/]
[/for]



thing [component.name.toUpperFirst()/] inludes [for (component : Component | aPackage.allOwnedElements()->filter(Component))][component.name/],[/for]
	{ 
		[if(component.hasStereotype('VirtualBoard'))]
			[for (stateM:uml::StateMachine | self.allOwnedElements()-> filter(uml::StateMachine))]
				[generateStateMachine(stateM)/]
			[/for]
[/if]	
	}

configuration [component.name.toUpperFirst()/]
	{
		[for(aClass : Class | aPackage.allOwnedElements()->filter(Class))] 
 		instance [aClass.name.toLowerCase()/]:[aClass.name.toUpperFirst()/]
		[/for]

		[for(aPort : Port | aPackage.allOwnedElements()->filter(Port))] 
		connector [aPort.name.toLowerCase()/].[component.name.toLowerCase()/] => [aPort.name.toLowerCase()/].[component.name.toLowerCase()/]
		[/for]
}
	
[/file]
[/template]